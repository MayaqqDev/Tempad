org.gradle.jvmargs=-Xmx2G
loom.platform=neoforge

group=me.codexadrian.tempad
modId=tempad
version=2.3.8

neogradle.subsystems.parchment.minecraftVersion=1.20.6
neogradle.subsystems.parchment.mappingsVersion=2024.05.01

minecraft_version=1.21

minecraftVersion=1.21
neoforgeVersion=21.0.61-beta

resourcefulLibVersion=3.0.8
resourcefulLibKtVersion=2.0.0
resourcefulConfigVersion=3.0.1

kotlinForForgeVersion=5.3.0

botariumVersion=3.2.0
waystonesVersion=16.0.3+1.20.4
balmVersion=9.0.4+1.20.4
prometheusVersion=1.4.2
reiVersion=14.0.688
argonautsVersion=1.2.0
trinketsVersion=3.8.0
curiosVersion=9.0.4+1.21
baublyVersion=1.1.1

buffer.vertex(matrix4f, minX, minY, minZ).color(r, g, b, a).uv(texture.getU(uvMinX), texture.getV(uvMinZ)).uv2(light).normal(0, 0F, 0).endVertex();
buffer.vertex(matrix4f, maxX, minY, minZ).color(r, g, b, a).uv(texture.getU(uvMaxX), texture.getV(uvMinZ)).uv2(light).normal(0, 0F, 0).endVertex();
buffer.vertex(matrix4f, maxX, minY, maxZ).color(r, g, b, a).uv(texture.getU(uvMaxX), texture.getV(uvMaxZ)).uv2(light).normal(0, 0F, 0).endVertex();
buffer.vertex(matrix4f, minX, minY, maxZ).color(r, g, b, a).uv(texture.getU(uvMinX), texture.getV(uvMaxZ)).uv2(light).normal(0, 0F, 0).endVertex();

//Left
buffer.vertex(matrix4f, minX, maxY, maxZ).color(r, g, b, a).uv(texture.getU(uvMaxZ), texture.getV(uvMaxY)).uv2(light).normal(0, 0F, 0).endVertex();
buffer.vertex(matrix4f, minX, maxY, minZ).color(r, g, b, a).uv(texture.getU(uvMinZ), texture.getV(uvMaxY)).uv2(light).normal(0, 0F, 0).endVertex();
buffer.vertex(matrix4f, minX, minY, minZ).color(r, g, b, a).uv(texture.getU(uvMinZ), texture.getV(uvMinY)).uv2(light).normal(0, 0F, 0).endVertex();
buffer.vertex(matrix4f, minX, minY, maxZ).color(r, g, b, a).uv(texture.getU(uvMaxZ), texture.getV(uvMinY)).uv2(light).normal(0, 0F, 0).endVertex();

//Right
buffer.vertex(matrix4f, maxX, maxY, minZ).color(r, g, b, a).uv(texture.getU(uvMinZ), texture.getV(uvMaxY)).uv2(light).normal(0, 0F, 0).endVertex();
buffer.vertex(matrix4f, maxX, maxY, maxZ).color(r, g, b, a).uv(texture.getU(uvMaxZ), texture.getV(uvMaxY)).uv2(light).normal(0, 0F, 0).endVertex();
buffer.vertex(matrix4f, maxX, minY, maxZ).color(r, g, b, a).uv(texture.getU(uvMaxZ), texture.getV(uvMinY)).uv2(light).normal(0, 0F, 0).endVertex();
buffer.vertex(matrix4f, maxX, minY, minZ).color(r, g, b, a).uv(texture.getU(uvMinZ), texture.getV(uvMinY)).uv2(light).normal(0, 0F, 0).endVertex();
stack.popPose();